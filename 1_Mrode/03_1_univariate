####################################################################################
#                                                                                  #
#                  Univariate Example 3.1, pages 42 - 45                           #
#                                                                                  #
####################################################################################
mkdir 03_1_Univariate_anim
cd 03_1_Univariate_anim

# generate pedigree file
echo "anim sire dam" > ped_head
cat <<EOF > pedigree
1 . .
2 . .
3 . .
4 1 .
5 3 2
6 1 2
7 4 5
8 3 6
EOF

# generate performance file
echo "anim Sex WWG" > perf_head
cat <<EOF > perf
4 M 4.5
5 F 2.9
6 F 3.9
7 M 3.5
8 M 5.0
EOF

# stack pedigree
helical bolt pedstack -p pedigree -o ped_stk

# generate Ainverse
helical bolt invnrm -p ped_stk -v Ainv

# vectors to generate X and Z
awk '{print $1}' perf > id.dat 		# animals with phenotypes
awk '{print $2}' perf > Sex 		# sex
awk '{print $3}' perf > y0 			# phenotypes

# vectors for levels of each fixed effect
awk '$1!="."{print $1}' Sex | sort -u > Sex.eff

# vector of animals in the pedigree
awk '{print $1}' ped_stk > id.eff

# vector of unique animals in the performance file
awk '$1!="."{print $1}' id.dat | sort -u > perf_id.eff

# create X
helical euler zgen -d Sex -e Sex.eff -r y0 -o X00

# create Z
helical euler zgen -d id.dat -e id.eff -r y0 -o Z00

#last line on page 42, alpha = 40/20 = 2
alpha=$(echo 2)

# create LHS and RHS matrices
cat << EOF > expr-lhs-rhs
#lhs
write("X00X00", X00' * X00)
write("X00Z00", X00' * Z00)
write("Z00Z00", Z00' * Z00)
#rhs
write("rhs.0", X00' * y0)
write("rhs.1", Z00' * y0)
EOF

helical euler expr expr-lhs-rhs

# set up LHS
echo "MAP
X00X00 X00Z00
sym Z00Z00+Ainv*$alpha" > lhsmap

# set up RHS
echo "MAP
rhs.0
rhs.1" > rhsmap

# solve!
helical euler pcg lhsmap rhsmap sol -n 100 

# view MAP file of solutions
cat sol
# has file sol_0_0 for rhs.0 
# has file sol_1_0 for rhs.1 

# generate results files
mkdir Results
echo "Effect Solution" > Results/FixedEffects
paste -d " " Sex.eff <(helical euler print sol_0_0) >> Results/FixedEffects # will be in a different order to textbook

#results are in the stacked pedigree order
echo "Animal Solution" > Results/AnimalEffects
paste -d " " id.eff <(helical euler print sol_1_0) >> Results/AnimalEffects 

#to write results in the sorted pedigree order:
echo "Animal Solution" > Results/AnimalEffects.srt
paste -d " " id.eff <(helical euler print sol_1_0) | sort >> Results/AnimalEffects.srt 
